name: 
  sobitie_bot_master
run-name: 
  ${{ github.actor }} CI/CD process for master
on:
  workflow_dispatch:
  push:
    branches: [ "master" ]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort

      - name: flake8
        run: |
          python -m flake8 --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

  build_and_push_to_docker_hub:
    name: Push image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push sobitie to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/sobitie:master

  deploy:
    name: Deploy to server
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: copy file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.MASTER_HOST }}
          username: ${{ secrets.MASTER_USER }}
          key: ${{ secrets.MASTER_SSH_KEY }}
          source: "docker-compose.prod.yaml, nginx/*.conf"
          target: "/home/deployment-user/"
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MASTER_HOST }}
          username: ${{ secrets.MASTER_USER }}
          key: ${{ secrets.MASTER_SSH_KEY }}
          script: |
            sudo docker compose -f docker-compose.prod.yaml stop
            sudo docker system prune -af
            cd /home/deployment-user/

            touch .env
            cat > .env <<- EOM
            DJ_SECRET_KEY="${{ secrets.MASTER_DJ_SECRET_KEY }}"
            VK_ACCESS_TOKEN="${{ secrets.MASTER_VK_ACCESS_TOKEN }}"
            VK_GROUP_ID="${{ secrets.MASTER_VK_GROUP_ID }}"
            TELEGRAM_TOKEN="${{ secrets.MASTER_TELEGRAM_TOKEN }}"
            API_ADDRESS="${{ secrets.MASTER_API_ADDRESS }}"
            DEPLOY_PATH="${{ secrets.MASTER_DEPLOY_PATH }}"
            EOM
            
            sudo docker compose -f docker-compose.prod.yaml pull
            sudo docker compose -f docker-compose.prod.yaml up -d
            sudo docker compose -f docker-compose.prod.yaml exec -it web python manage.py migrate
            sudo docker compose -f docker-compose.prod.yaml exec -it web python manage.py collectstatic --no-input
            echo "OK"